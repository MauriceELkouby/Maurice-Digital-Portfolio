/* Global Reset & Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', Arial, sans-serif;
    background: #0F0F0F;
    color: #EDEDED;
    scroll-behavior: smooth;
}

/* Glassmorphism */
.glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 15px;
}

/* Navbar Styles */
#navbar {
    position: sticky;
    top: 0;
    z-index: 1000;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    margin-bottom: 2rem;
}

#navbar .logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: #FF6F3C;
}

#navbar .nav-links {
    list-style: none;
    display: flex;
    gap: 1rem;
}
/* Hide menu toggle by default (on desktop) */
.menu-toggle {
    display: none;
}

/* Show menu toggle only on mobile (max 768px width) */
@media (max-width: 768px) {
    .menu-toggle {
        display: block;
        background: none;
        border: none;
        font-size: 2rem;
        color: #FFC93C;
        cursor: pointer;
    }

    .nav-links {
        display: none;
        position: absolute;
        top: 60px;
        right: 0;
        background: rgba(0, 0, 0, 0.9);
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;
        border-radius: 10px;
    }

    .nav-links.show {
        display: flex;
    }
}

/* Always show nav-links on desktop */
@media (min-width: 769px) {
    .nav-links {
        display: flex !important;
        flex-direction: row;
        gap: 1rem;
        position: static;
        background: none;
        padding: 0;
    }
}
#navbar .nav-links li a {
    color: #EDEDED;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 10px;
    transition: background 0.3s, color 0.3s;
}

#navbar .nav-links li a:hover,
#navbar .nav-links li a.active {
    background: #FF6F3C;
    color: #0F0F0F;
}

/* Sections */
.content-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 2rem;
}

.hero-section {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    height: 90vh;
}

.hero-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
    opacity: 0.3; /* Adjust transparency */
}

.hero-section h1 {
    font-size: 3rem;
    color: #FFC93C;
    opacity: 1;
}

.hero-section p {
    font-size: 1.2rem;
    margin-top: 1rem;
    max-width: 600px;
    color: #8AFF80;
    opacity: 1;
}

/* Skills Grid */
.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-top: 2rem;
}

.skill-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    text-align: center;
    border-radius: 10px;
    transition: transform 0.3s ease, background 0.3s;
}

.skill-item:hover {
    transform: translateY(-5px);
    background: rgba(255, 255, 255, 0.1);
}

/* Projects Grid */
.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
    transition: all 0.3s ease;
}

.project-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    overflow: hidden;
    transition: transform 0.3s ease, opacity 0.3s ease;
    text-align: left;
    display: flex;
    flex-direction: column;

}
.project-card.hidden {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}
.project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
}

.project-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    display: block;
}

.project-card-content {
    padding: 1rem 1.5rem;
}

.project-card h3 {
    font-size: 1.2rem;
    padding: 1rem;
}
.project-card p {
    font-size: 1rem;
    color: #EDEDED;
    margin: 1rem 1rem 1rem 1rem;
}
.project-card a {
    display: block;
    padding: 1rem;
    text-decoration: none;
    color: #8AFF80;
    font-weight: bold;
}
.skill-bubble {
    background-color: #8AFF80;
    color: #1A1A1A;
    border: none;
    padding: 5px 10px;
    margin: 5px 5px 0 0;
    border-radius: 20px;
    font-size: 0.9rem;
    cursor: default;
    transition: background 0.3s;
}

.skill-bubble:hover {
    background-color: #8AFF80;
}
/* Filter Buttons */
.filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    padding: 0 1rem;
}

.filter-buttons button {
    background: #1A1A1A;
    color: #EDEDED;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background 0.3s ease;
}

.filter-buttons button:hover,
.filter-buttons button.active {
    background: #FF6F3C;
    color: #0F0F0F;
}

/* Contact Section */
#contact ul {
    list-style: none;
    padding: 0;
    margin-top: 1rem;
}

#contact ul li {
    margin-bottom: 0.5rem;
}

#contact ul a {
    color: #8AFF80;
    text-decoration: underline;
}
/* Nudge bubble */
#chat-nudge {
  position: fixed;
  bottom: 80px;           /* sits above the chat button */
  right: 20px;
  max-width: 220px;
  background: #FF6F3C;
  color: #0F0F0F;
  padding: 10px 12px;
  border-radius: 14px;
  font-size: 14px;
  line-height: 1.2;
  box-shadow: 0 8px 18px rgba(0,0,0,0.25);
  display: none;          /* JS toggles this */
  z-index: 1001;
  animation: nudge-in 350ms ease-out;
}

/* Chatbot */
#chat-nudge::after {       /* little speech-arrow */
  content: "";
  position: absolute;
  bottom: -8px;
  right: 24px;
  border-width: 8px 8px 0 8px;
  border-style: solid;
  border-color: #FF6F3C transparent transparent transparent;
}

/* Show class so JS can toggle visibility without inline styles */
#chat-nudge.show { display: block; }

/* Entrance animation */
@keyframes nudge-in {
  from { transform: translateY(8px); opacity: 0; }
  to   { transform: translateY(0);   opacity: 1; }
}

/* Subtle pulse ring behind the chat button to draw attention */
#chat-toggle {
  position: relative;
  isolation: isolate; /* keeps the pulse behind the button */
}

#chat-toggle::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50px;
  z-index: -1;
  box-shadow: 0 0 0 0 rgba(255, 111, 60, 0.55);
  animation: pulse 2.2s ease-out infinite;
}

@keyframes pulse {
  0%   { box-shadow: 0 0 0 0 rgba(255, 111, 60, 0.55); }
  70%  { box-shadow: 0 0 0 14px rgba(255, 111, 60, 0); }
  100% { box-shadow: 0 0 0 0 rgba(255, 111, 60, 0); }
}

/* Donâ€™t let the nudge overlap the open chat window */
#chatbot { z-index: 1002; }

/* Mobile: tuck the bubble a bit higher */
@media (max-width: 520px) {
  #chat-nudge { bottom: 100px; right: 16px; max-width: 70vw; }
}

#chatbot-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
}

#chat-toggle {
    background: #FF6F3C;
    color: #0F0F0F;
    border: none;
    padding: 10px 15px;
    border-radius: 50px;
    cursor: pointer;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
}

#chatbot {
    display: none;
    width: 320px;
    background: #1A1A1A;
    color: #EDEDED;
    border-radius: 10px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
    overflow: hidden;
    position: fixed;
    bottom: 80px;
    right: 20px;
}

#chat-header {
    background: #FF6F3C;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#chat-output {
    height: 250px;
    overflow-y: auto;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

/* Chat message bubble styles */
.message {
    max-width: 70%;
    padding: 10px 15px;
    border-radius: 20px;
    word-wrap: break-word;
}

/* User message (aligned right) */
.user-message {
    align-self: flex-end;
    background: #FFC93C;
    color: #0F0F0F;
    text-align: right;
    border-bottom-right-radius: 5px;
}

/* Bot message (aligned left) */
.bot-message {
    align-self: flex-start;
    background: #1E1E1E;
    color: #EDEDED;
    text-align: left;
    border-bottom-left-radius: 5px;
}

/* Loading state (same as bot style but italic) */
.bot-message.loading {
    font-style: italic;
}

/* Chat input container */
#chat-input-container {
    display: flex;
    border-top: 1px solid #444;
    background: #222;
}

#chat-input {
    flex: 1;
    padding: 10px;
    border: none;
    outline: none;
    background: #0F0F0F;
    color: #EDEDED;
    border-radius: 0;
}

#send-button {
    background: #FF6F3C;
    color: #0F0F0F;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
}


/* Back to Top */
#back-to-top {
    position: fixed;
    bottom: 20px;
    left: 20px;
    background: #FF6F3C;
    color: #0F0F0F;
    padding: 10px 15px;
    border-radius: 50px;
    cursor: pointer;
    display: none;
}

/* Animations with AOS */
[data-aos] {
    transition: all 0.6s ease-in-out;
}

/* Responsive Tweaks */
@media (max-width: 768px) {
    #navbar .nav-links {
        flex-direction: column;
        background: rgba(0, 0, 0, 0.8);
        position: absolute;
        top: 60px;
        right: 20px;
        padding: 1rem;
        border-radius: 10px;
        display: none;
    }

    #navbar .nav-links.show {
        display: flex;
    }
}
.certifications-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
}

.cert-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    padding: 1.5rem;
    transition: transform 0.3s, box-shadow 0.3s;
    text-align: left;
}

.cert-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
}

.cert-card h3 {
    margin-bottom: 0.5rem;
    font-size: 1.3rem;
    color: #FFC93C;
}

.cert-card p {
    font-size: 1rem;
    margin-bottom: 1rem;
}

.cert-card a {
    color: #8AFF80;
    font-weight: bold;
}

.cert-card img {
    width: 100%;
    border-radius: 10px;
    margin-top: 1rem;
}
.project-summary {
  margin: 0 1rem 0.75rem 1rem;
  color: #EDEDED;
  line-height: 1.45;
}
.lang-switch {
  display: flex;
  gap: 0.5rem;
  margin-left: 1rem;
}

.lang-switch button {
  background: transparent;      /* no background */
  color: #D9B68C;              /* same as nav text */
  border: none;
  padding: 0.4rem 0.8rem;
  font-size: 0.9rem;
  cursor: pointer;
  transition: color 0.3s ease, transform 0.2s ease;
}

.lang-switch button:hover {
  color: #C65D3B;              /* highlight on hover */
  transform: translateY(-2px); /* subtle lift */
}

/* Kill the top banner entirely */
.goog-te-banner-frame,
.goog-te-banner-frame.skiptranslate {
  display: none !important;
  visibility: hidden !important;
  height: 0 !important;
}

/* Remove any push-down Google applies */
html, body {
  top: 0 !important;
  margin-top: 0 !important;
  padding-top: 0 !important;
}

/* Optional: hide leftover tooltip/balloon & gadget bits */
#goog-gt-tt,
.goog-te-balloon-frame,
.goog-te-gadget-icon,
.goog-logo-link,
.goog-te-gadget span {
  display: none !important;
}
.goog-te-gadget { height: 0 !important; overflow: hidden !important; }

/* Reveal on scroll */
.reveal { opacity: 0; transform: translateY(14px); transition: transform .5s ease, opacity .5s ease; will-change: transform, opacity; }
.reveal.in { opacity: 1; transform: translateY(0); }
/* Cards: combine FLIP + tilt; keep it GPU-friendly */
.project-card{
  --flip: translate3d(0,0,0) scale(1);
  --tiltX: 0deg;
  --tiltY: 0deg;
  transform: var(--flip) rotateX(var(--tiltX)) rotateY(var(--tiltY));
  transform-style: preserve-3d;
  will-change: transform;
}

/* Hidden after filter */
.project-card.is-hidden { display: none; }

/* (Optional) isolate paint/layout for each card */
.project-card { contain: layout paint; }


/* Motion safety */
@media (prefers-reduced-motion: reduce) {
  .reveal, .reveal.in, .project-card { transition: none !important; transform: none !important; }
}
/* Optional stagger helpers */
.stagger-1 { transition-delay: .06s; }
.stagger-2 { transition-delay: .12s; }
.stagger-3 { transition-delay: .18s; }
.filter-buttons button { transition: transform .2s ease; }
.filter-buttons button:hover { transform: translateY(-2px) scale(1.04); }

/* ====== TIMELINE SECTION (lines + image) ====== */
.timeline {
  position: relative;
  max-width: 1000px;
  margin: 3rem auto;
  padding: 2rem 0;
}
.timeline::after {
  content: '';
  position: absolute;
  width: 2px;                 /* thinner center spine */
  background-color: #FFFFFF;
  top: 0;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}
.timeline-item {
  position: relative;
  width: 50%;
  padding: 1.25rem 2rem;
}
.timeline-item.left { left: 0; text-align: right; }
.timeline-item.right { left: 50%; }

/* Card */
.timeline-item .content {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  padding: 1.2rem 1.2rem 1.2rem 1.2rem;
  position: relative;
  transition: transform 0.3s ease;
}
.timeline-item .content:hover { transform: translateY(-5px); }

/* Thumbnail image */
.timeline-item .thumb {
  width: 44px;
  height: 44px;
  object-fit: contain;
  border-radius: 8px;
  margin-bottom: 0.6rem;
  background: #FFFFFF;
  display: inline-block;
}

/* Headings/date */
.timeline-item h3 { color: #FFC93C; margin: 0.25rem 0 0.35rem; }
.timeline-item .date { display: block; color: #8AFF80; font-size: 0.9rem; margin-bottom: 0.5rem; }

/* â€”â€” Replace dots with connector LINES from spine to card â€”â€” */
.timeline-item.left .content::before,
.timeline-item.right .content::before {
  content: '';
  position: absolute;
  top: 28px;                  /* aligns with title/thumb area; tweak as needed */
  height: 2px;                /* the line thickness */
  background: #ffffff;
  width: 28px;                /* line length from spine to card */
}

/* Left side: line goes from spine to the right edge of the center */
.timeline-item.left .content::before {
  right: -28px;               /* push line to meet the spine */
}

/* Right side: line goes from spine to the left edge of the center */
.timeline-item.right .content::before {
  left: -28px;
}

/* ---------- MOBILE FIX: make both sides full-width and align connectors ---------- */
@media (max-width: 768px) {
  /* Set variables; tweak indent as you like */
  .timeline { --spine-left: 20px; --indent: 2.75rem; }

  /* Put the spine at a fixed x with no extra transform */
  .timeline::after {
    left: var(--spine-left);
    transform: none; /* remove the desktop translateX(-50%) */
  }

  /* Force BOTH side variants to left:0 (higher specificity than .timeline-item alone) */
  .timeline-item,
  .timeline-item.left,
  .timeline-item.right {
    width: 100%;
    left: 0;
    text-align: left;
    padding-left: var(--indent);
  }

  /* Connector auto-sizes from card edge to the spine (no gaps) */
  .timeline-item .content::before {
    right: auto;
    left: calc(-1 * (var(--indent) - var(--spine-left)));
    width: calc(var(--indent) - var(--spine-left) + 1px); /* +1px guards subpixel gaps */
    height: 2px;
    background: #ffffff;
  }
}

/* Tighter phones */
@media (max-width: 520px) {
  .timeline { --spine-left: 16px; --indent: 2.25rem; }
}



